// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls=WPAppStudio.Controls;
using Entities=WPAppStudio.Entities;
using EntitiesBase=WPAppStudio.Entities.Base;
using IServices=WPAppStudio.Services.Interfaces;
using IViewModels=WPAppStudio.ViewModel.Interfaces;
using Localization=WPAppStudio.Localization;
using Repositories=WPAppStudio.Repositories;
using Services=WPAppStudio.Services;
using ViewModelsBase=WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of info_Info ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class info_InfoViewModel : ViewModelsBase.VMBase, IViewModels.Iinfo_InfoViewModel
    {       

		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ISpeechService _speechService;
		private readonly IServices.IShareService _shareService;
		private readonly IServices.ILiveTileService _liveTileService;
		private readonly IServices.ILockScreenService _lockScreenService;
		private readonly Repositories.Iinfo_info _info_info;
		private readonly Repositories.Imonuments_monumentsCollection _monuments_monumentsCollection;
		private readonly Repositories.ISpecialPlaces_specialplacesCollection _specialPlaces_specialplacesCollection;
		private readonly IServices.IInternetService _internetService;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="info_InfoViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="speechService">The Speech Service.</param>
        /// <param name="shareService">The Share Service.</param>
        /// <param name="liveTileService">The Live Tile Service.</param>
        /// <param name="lockScreenService">The Lock Screen Service.</param>
        /// <param name="info_info">The Info_info.</param>
        /// <param name="monuments_monumentsCollection">The Monuments_monuments Collection.</param>
        /// <param name="specialPlaces_specialplacesCollection">The Special Places_specialplaces Collection.</param>
        /// <param name="internetService">The Internet Service.</param>
        public info_InfoViewModel(IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ISpeechService speechService, IServices.IShareService shareService, IServices.ILiveTileService liveTileService, IServices.ILockScreenService lockScreenService, Repositories.Iinfo_info info_info, Repositories.Imonuments_monumentsCollection monuments_monumentsCollection, Repositories.ISpecialPlaces_specialplacesCollection specialPlaces_specialplacesCollection, IServices.IInternetService internetService)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_speechService = speechService;
			_shareService = shareService;
			_liveTileService = liveTileService;
			_lockScreenService = lockScreenService;
			_info_info = info_info;
			_monuments_monumentsCollection = monuments_monumentsCollection;
			_specialPlaces_specialplacesCollection = specialPlaces_specialplacesCollection;
			_internetService = internetService;
        }
		
	    /// <summary>
        /// IsInternetAvalaible property.
        /// </summary>		
        public Visibility IsInternetAvalaible
        {
	      get
          {
				return _internetService.IsNetworkAvailable() ? Visibility.Collapsed : Visibility.Visible; 
           }
		}
	
		private string _currentinfo_InfoHtmlControl;

        /// <summary>
        /// Currentinfo_InfoHtmlControl property.
        /// </summary>		
        public string Currentinfo_InfoHtmlControl
        {
            get
            {
				
                if(_currentinfo_InfoHtmlControl == null)
					_currentinfo_InfoHtmlControl = _info_info.Get();
				return _currentinfo_InfoHtmlControl;     
            }
            set
            {
                SetProperty(ref _currentinfo_InfoHtmlControl, value);
            }
        }
	
		private ObservableCollection<Entities.monumentsCollectionSchema> _monuments_ListListControlCollection;

        /// <summary>
        /// Monuments_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<Entities.monumentsCollectionSchema> Monuments_ListListControlCollection
        {
            get
            {
				
                if(_monuments_ListListControlCollection == null)
					_monuments_ListListControlCollection = _monuments_monumentsCollection.GetData();
				return _monuments_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _monuments_ListListControlCollection, value);
            }
        }
	
		private int _monuments_ListListControlCollectionPageNumber;

        /// <summary>
        /// Monuments_ListListControlCollectionPageNumber property.
        /// </summary>		
        public int Monuments_ListListControlCollectionPageNumber
        {
            get
            {
				return _monuments_ListListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _monuments_ListListControlCollectionPageNumber, value);
            }
        }
	
		private Entities.monumentsCollectionSchema _selectedmonuments_ListListControlCollection;

        /// <summary>
        /// Selectedmonuments_ListListControlCollection property.
        /// </summary>		
        public Entities.monumentsCollectionSchema Selectedmonuments_ListListControlCollection
        {
            get
            {
				return _selectedmonuments_ListListControlCollection;
            }
            set
            {
                _selectedmonuments_ListListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.Imonuments_DetailViewModel>(_selectedmonuments_ListListControlCollection);
            }
        }
	
		private ObservableCollection<Entities.specialplacesCollectionSchema> _specialPlaces_ListListControlCollection;

        /// <summary>
        /// SpecialPlaces_ListListControlCollection property.
        /// </summary>		
        public ObservableCollection<Entities.specialplacesCollectionSchema> SpecialPlaces_ListListControlCollection
        {
            get
            {
				
                if(_specialPlaces_ListListControlCollection == null)
					_specialPlaces_ListListControlCollection = _specialPlaces_specialplacesCollection.GetData();
				return _specialPlaces_ListListControlCollection;     
            }
            set
            {
                SetProperty(ref _specialPlaces_ListListControlCollection, value);
            }
        }
	
		private int _specialPlaces_ListListControlCollectionPageNumber;

        /// <summary>
        /// SpecialPlaces_ListListControlCollectionPageNumber property.
        /// </summary>		
        public int SpecialPlaces_ListListControlCollectionPageNumber
        {
            get
            {
				return _specialPlaces_ListListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _specialPlaces_ListListControlCollectionPageNumber, value);
            }
        }
	
		private Entities.specialplacesCollectionSchema _selectedSpecialPlaces_ListListControlCollection;

        /// <summary>
        /// SelectedSpecialPlaces_ListListControlCollection property.
        /// </summary>		
        public Entities.specialplacesCollectionSchema SelectedSpecialPlaces_ListListControlCollection
        {
            get
            {
				return _selectedSpecialPlaces_ListListControlCollection;
            }
            set
            {
                _selectedSpecialPlaces_ListListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.ISpecialPlaces_DetailViewModel>(_selectedSpecialPlaces_ListListControlCollection);
            }
        }

        /// <summary>
        /// Delegate method for the Getmonuments_ListListControlCollectionCommand command.
        /// </summary>
        public  void Getmonuments_ListListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				Getmonuments_ListListControlCollectionData(pageNumber);
        }
		

        private ICommand _getmonuments_ListListControlCollectionCommand;

        /// <summary>
        /// Gets the Getmonuments_ListListControlCollectionCommand command.
        /// </summary>
        public ICommand Getmonuments_ListListControlCollectionCommand
        {
            get { return _getmonuments_ListListControlCollectionCommand = _getmonuments_ListListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(Getmonuments_ListListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetSpecialPlaces_ListListControlCollectionCommand command.
        /// </summary>
        public  void GetSpecialPlaces_ListListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetSpecialPlaces_ListListControlCollectionData(pageNumber);
        }
		

        private ICommand _getSpecialPlaces_ListListControlCollectionCommand;

        /// <summary>
        /// Gets the GetSpecialPlaces_ListListControlCollectionCommand command.
        /// </summary>
        public ICommand GetSpecialPlaces_ListListControlCollectionCommand
        {
            get { return _getSpecialPlaces_ListListControlCollectionCommand = _getSpecialPlaces_ListListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetSpecialPlaces_ListListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the TextToSpeechinfo_InfoHtmlControlCommand command.
        /// </summary>
        public  void TextToSpeechinfo_InfoHtmlControlCommandDelegate() 
        {
				_speechService.TextToSpeech(Currentinfo_InfoHtmlControl);
        }
		

        private ICommand _textToSpeechinfo_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the TextToSpeechinfo_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand TextToSpeechinfo_InfoHtmlControlCommand
        {
            get { return _textToSpeechinfo_InfoHtmlControlCommand = _textToSpeechinfo_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(TextToSpeechinfo_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the Shareinfo_InfoHtmlControlCommand command.
        /// </summary>
        public  void Shareinfo_InfoHtmlControlCommandDelegate() 
        {
				_shareService.Share(@"info", Currentinfo_InfoHtmlControl);
        }
		

        private ICommand _shareinfo_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the Shareinfo_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand Shareinfo_InfoHtmlControlCommand
        {
            get { return _shareinfo_InfoHtmlControlCommand = _shareinfo_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(Shareinfo_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the PinToStartinfo_InfoHtmlControlCommand command.
        /// </summary>
        public  void PinToStartinfo_InfoHtmlControlCommandDelegate() 
        {
				_liveTileService.PinToStart(typeof(IViewModels.Iinfo_InfoViewModel), CreateTileInfoinfo_InfoHtmlControl());
        }
		

        private ICommand _pinToStartinfo_InfoHtmlControlCommand;

        /// <summary>
        /// Gets the PinToStartinfo_InfoHtmlControlCommand command.
        /// </summary>
        public ICommand PinToStartinfo_InfoHtmlControlCommand
        {
            get { return _pinToStartinfo_InfoHtmlControlCommand = _pinToStartinfo_InfoHtmlControlCommand ?? new ViewModelsBase.DelegateCommand(PinToStartinfo_InfoHtmlControlCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the SetLockScreenCommand command.
        /// </summary>
        public  void SetLockScreenCommandDelegate() 
        {
				_lockScreenService.SetLockScreen("LockScreen-5240091b-38fb-4a54-be76-654f4dba2d49.png");
        }
		

        private ICommand _setLockScreenCommand;

        /// <summary>
        /// Gets the SetLockScreenCommand command.
        /// </summary>
        public ICommand SetLockScreenCommand
        {
            get { return _setLockScreenCommand = _setLockScreenCommand ?? new ViewModelsBase.DelegateCommand(SetLockScreenCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the AboutCommand command.
        /// </summary>
        public  void AboutCommandDelegate() 
        {
				_navigationService.NavigateTo<IViewModels.IAboutViewModel>();
        }
		

        private ICommand _aboutCommand;

        /// <summary>
        /// Gets the AboutCommand command.
        /// </summary>
        public ICommand AboutCommand
        {
            get { return _aboutCommand = _aboutCommand ?? new ViewModelsBase.DelegateCommand(AboutCommandDelegate); }
        }

        private void Getmonuments_ListListControlCollectionData(int pageNumber = 0)
        {
				Monuments_ListListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items = _monuments_monumentsCollection.GetData(pageNumber);
                    Monuments_ListListControlCollection = items;
				}
                else   
				{
					var items = _monuments_monumentsCollection.GetData(pageNumber);
                    foreach (var item in items)                    
                        Monuments_ListListControlCollection.Add(item);
				}
		}

        private void GetSpecialPlaces_ListListControlCollectionData(int pageNumber = 0)
        {
				SpecialPlaces_ListListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items = _specialPlaces_specialplacesCollection.GetData(pageNumber);
                    SpecialPlaces_ListListControlCollection = items;
				}
                else   
				{
					var items = _specialPlaces_specialplacesCollection.GetData(pageNumber);
                    foreach (var item in items)                    
                        SpecialPlaces_ListListControlCollection.Add(item);
				}
		}
        /// <summary>
        /// Initializes a <see cref="Services.TileInfo" /> object for the info_InfoHtmlControl control.
        /// </summary>
		/// <returns>A <see cref="Services.TileInfo" /> object.</returns>
        public Services.TileInfo CreateTileInfoinfo_InfoHtmlControl()
        {
            var tileInfo = new Services.TileInfo
            {
                CurrentId = @"info",
                Title = @"info",
                BackTitle = @"info",
                BackContent = Currentinfo_InfoHtmlControl,
                Count = 0,
                BackgroundImagePath = string.Empty,
                BackBackgroundImagePath = string.Empty,
                LogoPath = "Logo-aafb5c9d-c352-45d2-8a05-ca75f71cb409.png"
            };
            return tileInfo;
        }
    }
}
